{"version":3,"file":"static/js/543.cdf869ce.chunk.js","mappings":"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","sources":["components/Filter/Filter.jsx","components/ContactIItem/ContactsItem.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/useFormOperations.js","components/ContactForm/ContactForm.jsx","components/ContactIItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/BasicStyledComponents/Title.jsx","components/BasicStyledComponents/Container.jsx","components/BasicStyledComponents/Section.jsx","pages/PhoneBookPage/PhoneBookPage.jsx"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { filterValue } from '../../redux/app';\nimport styled from 'styled-components';\n\nconst Label = styled.label`\n  margin-bottom: 50px;\n\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n\n  font-weight: 600;\n  & input {\n    margin-left: 15px;\n  }\n`;\n\nconst Filter = () => {\n  const value = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const changeFilter = e => dispatch(filterValue(e.target.value));\n\n  return (\n    <Label>\n      Find contacts by name\n      <input type=\"text\" onChange={changeFilter} value={value} />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  column-gap: 30px;\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n\n  @media (max-width: 450px) {\n    column-gap: 15px;\n  }\n`;\n\nexport const Name = styled.span`\n  font-weight: 600;\n  font-size: 1em;\n`;\nexport const Phone = styled.a`\n  white-space: nowrap;\n  color: inherit;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  column-gap: 7px;\n`;\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  column-gap: 10px;\n\n  width: 100%;\n  max-width: 100px;\n  height: 35px;\n  padding: 5px;\n  background-color: var(--button-color);\n  color: white;\n  cursor: pointer;\n  user-select: none;\n  border: solid 1px black;\n  border-radius: 3px;\n\n  justify-self: end;\n\n  @media (max-width: 450px) {\n    width: 40px;\n    font-size: 22px;\n    & span {\n      display: none;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  z-index: 3;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  padding: 50px;\n  background-color: rgba(0, 0, 0, 0.466);\n`;\nexport const ModalWindow = styled.div`\n  position: absolute;\n  width: 100%;\n  max-width: 100vw;\n  max-height: 100vh;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalWindow } from './Modal.styled';\nexport const Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleOverlayClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleOverlayClick}>\n      <ModalWindow>\n        {children}\n        <button type=\"button\" onClick={() => onClose()}>\n          X\n        </button>\n      </ModalWindow>\n    </Overlay>,\n    document.getElementById('modal-portal')\n  );\n};\n","import styled from 'styled-components'\n\nexport const Form = styled.form`\n  padding: 5px;\n\n  display: grid;\n  grid-template-areas:\n    'rowName buttonSubmit'\n    'rowNumber buttonSubmit';\n\n  grid-gap: 20px;\n\n  @media (max-width: 480px) {\n    grid-gap: 10px;\n    grid-template-areas:\n      'rowName '\n      'rowNumber'\n      'buttonSubmit';\n  }\n`\nconst Area = styled.label`\n  display: inline-flex;\n  justify-content: space-between;\n  column-gap: 20px;\n\n  font-weight: 700;\n  font-size: 1.5em;\n\n  & input {\n    width: 100%;\n    max-width: 300px;\n    min-width: 175px;\n  }\n`\n\nexport const AreaName = styled(Area)`\n  grid-area: rowName;\n`\nexport const AreaNumber = styled(Area)`\n  grid-area: rowNumber;\n`\n\nexport const SubmitBtn = styled.button`\n  grid-area: buttonSubmit;\n  margin-left: auto;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  column-gap: 20px;\n\n  padding: 5px 15px;\n  width: 100%;\n  max-width: 200px;\n\n  font-size: 20px;\n  color: white;\n  background-color: var(--button-color);\n\n  user-select: none;\n  border: solid 1px black;\n  border-radius: 3px;\n  cursor: pointer;\n\n  & svg {\n    width: 30px;\n    height: 30px;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 16px;\n    column-gap: 10px;\n  }\n\n  @media (max-width: 550px) {\n    & span {\n      display: none;\n    }\n  }\n\n  @media (max-width: 480px) {\n    font-size: 16px;\n    width: 60px;\n    height: 60px;\n  }\n`\n","import { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useSelector } from 'react-redux';\nimport {\n  contactsApi,\n  useCreateContactMutation,\n  useEditContactMutation,\n} from '../../redux/app';\n\nconst notifyERROR = text => toast.error(text);\nconst notifySUCCESS = text => toast.success(text);\n\nconst useFormOperations = ({ contactId, closeForm, name, number }) => {\n  const { data: contacts } = useSelector(\n    contactsApi.endpoints.getAllContacts.select()\n  );\n\n  const [inputName, setInputName] = useState(name);\n  const [inputNumber, setInputNumber] = useState(number);\n\n  const [createContact] = useCreateContactMutation();\n  const [editContact] = useEditContactMutation();\n\n  const smartEdit = values => {\n    editContact({ id: contactId, ...values })\n      .unwrap()\n      .then(() => notifySUCCESS(`${inputName} updated`))\n      .catch(r => notifyERROR(`Something went wrong. Eroor: ${r.status}`));\n\n    closeForm();\n  };\n\n  const smartCreate = values => {\n    createContact(values)\n      .unwrap()\n      .then(() => notifySUCCESS(`New contact for ${inputName} added`))\n      .catch(r => notifyERROR(`Something went wrong. Eroor: ${r.status}`));\n\n    setInputName('');\n    setInputNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contactExists = contacts?.find(\n      ({ name, number }) =>\n        number === inputNumber && name.toLowerCase() === inputName.toLowerCase()\n    );\n    const nameExists = contacts?.find(\n      ({ name }) => name.toLowerCase() === inputName.toLowerCase()\n    );\n    const values = { name: inputName, number: inputNumber };\n\n    if (contactId) {\n      contactExists\n        ? notifyERROR(`Contact is already exist!`)\n        : smartEdit(values);\n    } else if (!contactId) {\n      nameExists\n        ? notifyERROR(`${inputName} already exist!`)\n        : smartCreate(values);\n    }\n  };\n\n  return [inputName, setInputName, inputNumber, setInputNumber, handleSubmit];\n};\n\nexport default useFormOperations;\n","import { MdAddIcCall } from 'react-icons/md';\nimport { AreaName, AreaNumber, Form, SubmitBtn } from './ContactForm.styled';\nimport useFormOperations from './useFormOperations';\n\nexport default function ContactForm({\n  contactId,\n  closeForm,\n  name = '',\n  number = '',\n}) {\n  const [inputName, setInputName, inputNumber, setInputNumber, handleSubmit] =\n    useFormOperations({\n      contactId,\n      closeForm,\n      name,\n      number,\n    });\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <AreaName>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"The name can only contain letters, an apostrophe, a dash, and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc.\"\n          onChange={e => setInputName(e.target.value)}\n          value={inputName}\n          required\n        />\n      </AreaName>\n\n      <AreaNumber>\n        Phone\n        <input\n          type=\"tel\"\n          name=\"number\"\n          onChange={e => setInputNumber(e.target.value)}\n          value={inputNumber}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"The phone number must be numeric and may contain spaces, dashes, parentheses, and may begin with +\"\n          required\n        />\n      </AreaNumber>\n\n      <br />\n\n      <SubmitBtn type=\"submit\">\n        {contactId ? (\n          <span>Save changes</span>\n        ) : (\n          <span>\n            <MdAddIcCall /> Add contact\n          </span>\n        )}\n      </SubmitBtn>\n    </Form>\n  );\n}\n","import { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { MdPhoneEnabled } from 'react-icons/md';\nimport { AiFillDelete, AiFillEdit } from 'react-icons/ai';\nimport { Item, Name, Phone, Button } from './ContactsItem.styled';\nimport { useDeleteContactMutation } from '../../redux/app';\nimport { Modal } from '../Modal';\nimport ContactForm from '../ContactForm';\nimport toast from 'react-hot-toast';\n\nconst notifySUCCESS = text => toast.success(text);\nconst notifyERROR = text => toast.error(text);\n\nconst ContactItem = ({ contact }) => {\n  const { id, name, number } = contact;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <Item id={id}>\n      <Name>{name}:</Name>\n      <Phone href={'tel: ' + number}>\n        <MdPhoneEnabled /> {number}\n      </Phone>\n\n      <Button\n        type=\"button\"\n        onClick={() =>\n          deleteContact(id)\n            .then(() => notifySUCCESS(`${name} successfuly deleted!`))\n            .catch(() => notifyERROR('Something went wrong'))\n        }\n        disabled={isDeleting}\n      >\n        <AiFillDelete /> <span>{isDeleting ? '...Deleting' : 'Delete'}</span>\n      </Button>\n\n      <Button type=\"button\" onClick={() => setIsModalOpen(!isModalOpen)}>\n        <AiFillEdit /> <span>Edit</span>\n      </Button>\n\n      {isModalOpen && (\n        <Modal onClose={setIsModalOpen}>\n          <ContactForm\n            closeForm={setIsModalOpen}\n            contactId={id}\n            name={name}\n            number={number}\n          />\n        </Modal>\n      )}\n    </Item>\n  );\n};\n\n// ContactItem.propTypes = {\n//   id: PropTypes.string.isRequired,\n//   name: PropTypes.string.isRequired,\n//   number: PropTypes.string.isRequired,\n// };\n\nexport default ContactItem;\n","import ContactItem from '../ContactIItem';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { contactsApi } from '../../redux/app/contacts';\n\nconst StyledList = styled.ul`\n  width: 100%;\n  max-width: 440px;\n  margin: 0 auto;\n`;\n\nexport const ContactList = () => {\n  const { data: contacts } = useSelector(\n    contactsApi.endpoints.getAllContacts.select()\n  );\n  const filter = useSelector(state => state.filter);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <StyledList>\n      {getVisibleContacts().map(c => (\n        <ContactItem key={c.id} contact={c} />\n      ))}\n    </StyledList>\n  );\n};\n","import styled, { css } from 'styled-components'\n\nconst headingStyle = css`\n  text-align: center;\n  margin-bottom: 45px;\n`\n\nexport const H1 = styled.h1`\n  font-size: 24px;\n\n  ${headingStyle}\n`\n\nexport const H2 = styled.h1`\n  font-size: 18px;\n\n  ${headingStyle}\n`\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  margin: 50px auto;\n  border: solid 1px black;\n  max-width: 800px;\n  padding: 30px;\n`;\n","import styled from \"styled-components\";\n\nexport const Section = styled.section`\n  background-color: rgb(208, 213, 247);\n  padding: 25px;\n  border-radius: 5px;\n`;\n","import Filter from '../../components/Filter';\nimport { ContactList } from '../../components/ContactList';\nimport ContactForm from '../../components/ContactForm';\nimport { Section, H1, H2 } from '../../components/BasicStyledComponents';\nimport { useGetAllContactsQuery } from '../../redux/app';\n\nexport const PhoneBookPage = () => {\n  const { isLoading, isSuccess } = useGetAllContactsQuery();\n\n  return (\n    <main>\n      <H1>Phone book</H1>\n\n      <ContactForm />\n\n      {isLoading && <p>...Loading</p>}\n\n      {isSuccess && (\n        <Section>\n          <H2>Сontacts</H2>\n          <Filter />\n          <ContactList />\n        </Section>\n      )}\n    </main>\n  );\n};\n\nexport default PhoneBookPage;\n"],"names":["Label","styled","value","useSelector","state","filter","dispatch","useDispatch","type","onChange","e","filterValue","target","Item","Name","Phone","Button","Overlay","ModalWindow","Modal","onClose","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","onClick","currentTarget","document","getElementById","Form","Area","AreaName","AreaNumber","SubmitBtn","notifyERROR","text","toast","notifySUCCESS","contactId","closeForm","name","number","contacts","contactsApi","data","useState","inputName","setInputName","inputNumber","setInputNumber","useCreateContactMutation","createContact","useEditContactMutation","editContact","preventDefault","contactExists","find","toLowerCase","nameExists","values","id","unwrap","then","catch","r","status","smartEdit","smartCreate","ContactForm","useFormOperations","handleSubmit","onSubmit","pattern","title","required","contact","isModalOpen","setIsModalOpen","useDeleteContactMutation","deleteContact","isDeleting","isLoading","href","disabled","StyledList","ContactList","normalizedFilter","includes","getVisibleContacts","map","c","headingStyle","css","H1","H2","Section","PhoneBookPage","useGetAllContactsQuery","isSuccess"],"sourceRoot":""}