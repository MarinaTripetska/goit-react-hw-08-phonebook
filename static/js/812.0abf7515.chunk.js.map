{"version":3,"file":"static/js/812.0abf7515.chunk.js","mappings":"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","sources":["pages/HomePage/HomePage.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","components/Filter/Filter.jsx","components/ContactIItem/ContactsItem.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/useFormOperations.js","components/ContactForm/ContactForm.jsx","components/ContactIItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/BasicStyledComponents/Title.jsx","components/BasicStyledComponents/Container.jsx","components/BasicStyledComponents/Section.jsx","pages/PhoneBookPage/PhoneBookPage.jsx","components/RegistrationForm/RegistrationForm.jsx","pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["const HomePage = () => {\n  return (\n    <main>\n      <div>Main page</div>\n    </main>\n  );\n};\nexport default HomePage;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../../redux/app/authorization';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const nandleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(authOperations.logIn({ email, password }));\n\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"email\" name=\"email\" value={email} onChange={nandleChange} />\n      <input\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={nandleChange}\n      />\n\n      <button type=\"subbmit\">Log in</button>\n    </form>\n  );\n};\n","import { LoginForm } from 'components/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <main>\n      <LoginForm />\n    </main>\n  );\n};\n\nexport default LoginPage;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterValue } from '../../redux/app';\nimport styled from 'styled-components';\n\nconst Label = styled.label`\n  margin-bottom: 50px;\n\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n\n  font-weight: 600;\n  & input {\n    margin-left: 15px;\n  }\n`;\n\nconst Filter = () => {\n  const value = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const changeFilter = e => dispatch(filterValue(e.target.value));\n\n  return (\n    <Label>\n      Find contacts by name\n      <input type=\"text\" onChange={changeFilter} value={value} />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  column-gap: 30px;\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n\n  @media (max-width: 450px) {\n    column-gap: 15px;\n  }\n`;\n\nexport const Name = styled.span`\n  font-weight: 600;\n  font-size: 1em;\n`;\nexport const Phone = styled.a`\n  white-space: nowrap;\n  color: inherit;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  column-gap: 7px;\n`;\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  column-gap: 10px;\n\n  width: 100%;\n  max-width: 100px;\n  height: 35px;\n  padding: 5px;\n  background-color: var(--button-color);\n  color: white;\n  cursor: pointer;\n  user-select: none;\n  border: solid 1px black;\n  border-radius: 3px;\n\n  justify-self: end;\n\n  @media (max-width: 450px) {\n    width: 40px;\n    font-size: 22px;\n    & span {\n      display: none;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  z-index: 3;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  padding: 50px;\n  background-color: rgba(0, 0, 0, 0.466);\n`;\nexport const ModalWindow = styled.div`\n  position: absolute;\n  width: 100%;\n  max-width: 100vw;\n  max-height: 100vh;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalWindow } from './Modal.styled';\nexport const Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleOverlayClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleOverlayClick}>\n      <ModalWindow>\n        {children}\n        <button type=\"button\" onClick={() => onClose()}>\n          X\n        </button>\n      </ModalWindow>\n    </Overlay>,\n    document.getElementById('modal-portal')\n  );\n};\n","import styled from 'styled-components'\n\nexport const Form = styled.form`\n  padding: 5px;\n\n  display: grid;\n  grid-template-areas:\n    'rowName buttonSubmit'\n    'rowNumber buttonSubmit';\n\n  grid-gap: 20px;\n\n  @media (max-width: 480px) {\n    grid-gap: 10px;\n    grid-template-areas:\n      'rowName '\n      'rowNumber'\n      'buttonSubmit';\n  }\n`\nconst Area = styled.label`\n  display: inline-flex;\n  justify-content: space-between;\n  column-gap: 20px;\n\n  font-weight: 700;\n  font-size: 1.5em;\n\n  & input {\n    width: 100%;\n    max-width: 300px;\n    min-width: 175px;\n  }\n`\n\nexport const AreaName = styled(Area)`\n  grid-area: rowName;\n`\nexport const AreaNumber = styled(Area)`\n  grid-area: rowNumber;\n`\n\nexport const SubmitBtn = styled.button`\n  grid-area: buttonSubmit;\n  margin-left: auto;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  column-gap: 20px;\n\n  padding: 5px 15px;\n  width: 100%;\n  max-width: 200px;\n\n  font-size: 20px;\n  color: white;\n  background-color: var(--button-color);\n\n  user-select: none;\n  border: solid 1px black;\n  border-radius: 3px;\n  cursor: pointer;\n\n  & svg {\n    width: 30px;\n    height: 30px;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 16px;\n    column-gap: 10px;\n  }\n\n  @media (max-width: 550px) {\n    & span {\n      display: none;\n    }\n  }\n\n  @media (max-width: 480px) {\n    font-size: 16px;\n    width: 60px;\n    height: 60px;\n  }\n`\n","import { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useSelector } from 'react-redux';\nimport {\n  contactsApi,\n  useCreateContactMutation,\n  useEditContactMutation,\n} from '../../redux/app';\n\nconst notifyERROR = text => toast.error(text);\nconst notifySUCCESS = text => toast.success(text);\n\nconst useFormOperations = ({ contactId, closeForm, name, number }) => {\n  const { data: contacts } = useSelector(\n    contactsApi.endpoints.getAllContacts.select()\n  );\n\n  const [inputName, setInputName] = useState(name);\n  const [inputNumber, setInputNumber] = useState(number);\n\n  const [createContact] = useCreateContactMutation();\n  const [editContact] = useEditContactMutation();\n\n  const smartEdit = values => {\n    editContact({ id: contactId, ...values })\n      .unwrap()\n      .then(() => notifySUCCESS(`${inputName} updated`))\n      .catch(r => notifyERROR(`Something went wrong. Eroor: ${r.status}`));\n\n    closeForm();\n  };\n\n  const smartCreate = values => {\n    createContact(values)\n      .unwrap()\n      .then(() => notifySUCCESS(`New contact for ${inputName} added`))\n      .catch(r => notifyERROR(`Something went wrong. Eroor: ${r.status}`));\n\n    setInputName('');\n    setInputNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contactExists = contacts?.find(\n      ({ name, number }) =>\n        number === inputNumber && name.toLowerCase() === inputName.toLowerCase()\n    );\n    const nameExists = contacts?.find(\n      ({ name }) => name.toLowerCase() === inputName.toLowerCase()\n    );\n    const values = { name: inputName, number: inputNumber };\n\n    if (contactId) {\n      contactExists\n        ? notifyERROR(`Contact is already exist!`)\n        : smartEdit(values);\n    } else if (!contactId) {\n      nameExists\n        ? notifyERROR(`${inputName} already exist!`)\n        : smartCreate(values);\n    }\n  };\n\n  return [inputName, setInputName, inputNumber, setInputNumber, handleSubmit];\n};\n\nexport default useFormOperations;\n","import { MdAddIcCall } from 'react-icons/md';\nimport { AreaName, AreaNumber, Form, SubmitBtn } from './ContactForm.styled';\nimport useFormOperations from './useFormOperations';\n\nexport default function ContactForm({\n  contactId,\n  closeForm,\n  name = '',\n  number = '',\n}) {\n  const [inputName, setInputName, inputNumber, setInputNumber, handleSubmit] =\n    useFormOperations({\n      contactId,\n      closeForm,\n      name,\n      number,\n    });\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <AreaName>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"The name can only contain letters, an apostrophe, a dash, and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc.\"\n          onChange={e => setInputName(e.target.value)}\n          value={inputName}\n          required\n        />\n      </AreaName>\n\n      <AreaNumber>\n        Phone\n        <input\n          type=\"tel\"\n          name=\"number\"\n          onChange={e => setInputNumber(e.target.value)}\n          value={inputNumber}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"The phone number must be numeric and may contain spaces, dashes, parentheses, and may begin with +\"\n          required\n        />\n      </AreaNumber>\n\n      <br />\n\n      <SubmitBtn type=\"submit\">\n        {contactId ? (\n          <span>Save changes</span>\n        ) : (\n          <span>\n            <MdAddIcCall /> Add contact\n          </span>\n        )}\n      </SubmitBtn>\n    </Form>\n  );\n}\n","import { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { MdPhoneEnabled } from 'react-icons/md';\nimport { AiFillDelete, AiFillEdit } from 'react-icons/ai';\nimport { Item, Name, Phone, Button } from './ContactsItem.styled';\nimport { useDeleteContactMutation } from '../../redux/app';\nimport { Modal } from '../Modal';\nimport ContactForm from '../ContactForm';\nimport toast from 'react-hot-toast';\n\nconst notifySUCCESS = text => toast.success(text);\nconst notifyERROR = text => toast.error(text);\n\nconst ContactItem = ({ contact }) => {\n  const { id, name, number } = contact;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <Item id={id}>\n      <Name>{name}:</Name>\n      <Phone href={'tel: ' + number}>\n        <MdPhoneEnabled /> {number}\n      </Phone>\n\n      <Button\n        type=\"button\"\n        onClick={() =>\n          deleteContact(id)\n            .then(() => notifySUCCESS(`${name} successfuly deleted!`))\n            .catch(() => notifyERROR('Something went wrong'))\n        }\n        disabled={isDeleting}\n      >\n        <AiFillDelete /> <span>{isDeleting ? '...Deleting' : 'Delete'}</span>\n      </Button>\n\n      <Button type=\"button\" onClick={() => setIsModalOpen(!isModalOpen)}>\n        <AiFillEdit /> <span>Edit</span>\n      </Button>\n\n      {isModalOpen && (\n        <Modal onClose={setIsModalOpen}>\n          <ContactForm\n            closeForm={setIsModalOpen}\n            contactId={id}\n            name={name}\n            number={number}\n          />\n        </Modal>\n      )}\n    </Item>\n  );\n};\n\n// ContactItem.propTypes = {\n//   id: PropTypes.string.isRequired,\n//   name: PropTypes.string.isRequired,\n//   number: PropTypes.string.isRequired,\n// };\n\nexport default ContactItem;\n","import ContactItem from '../ContactIItem';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { contactsApi } from '../../redux/app/contacts';\n\nconst StyledList = styled.ul`\n  width: 100%;\n  max-width: 440px;\n  margin: 0 auto;\n`;\n\nexport const ContactList = () => {\n  const { data: contacts } = useSelector(\n    contactsApi.endpoints.getAllContacts.select()\n  );\n  const filter = useSelector(state => state.filter);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <StyledList>\n      {getVisibleContacts().map(c => (\n        <ContactItem key={c.id} contact={c} />\n      ))}\n    </StyledList>\n  );\n};\n","import styled, { css } from 'styled-components'\n\nconst headingStyle = css`\n  text-align: center;\n  margin-bottom: 45px;\n`\n\nexport const H1 = styled.h1`\n  font-size: 24px;\n\n  ${headingStyle}\n`\n\nexport const H2 = styled.h1`\n  font-size: 18px;\n\n  ${headingStyle}\n`\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  margin: 50px auto;\n  border: solid 1px black;\n  max-width: 800px;\n  padding: 30px;\n`;\n","import styled from \"styled-components\";\n\nexport const Section = styled.section`\n  background-color: rgb(208, 213, 247);\n  padding: 25px;\n  border-radius: 5px;\n`;\n","import Filter from '../../components/Filter';\nimport { ContactList } from '../../components/ContactList';\nimport ContactForm from '../../components/ContactForm';\nimport { Section, H1, H2 } from '../../components/BasicStyledComponents';\nimport { useGetAllContactsQuery } from '../../redux/app';\n\nexport const PhoneBookPage = () => {\n  const { isLoading, isSuccess } = useGetAllContactsQuery();\n\n  return (\n    <main>\n      <H1>Phone book</H1>\n\n      <ContactForm />\n\n      {isLoading && <p>...Loading</p>}\n\n      {isSuccess && (\n        <Section>\n          <H2>Сontacts</H2>\n          <Filter />\n          <ContactList />\n        </Section>\n      )}\n    </main>\n  );\n};\n\nexport default PhoneBookPage;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../../redux/app/authorization';\n\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'email') {\n      setEmail(value);\n    }\n    if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(authOperations.register({ name, email, password }));\n\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n      <input type=\"email\" name=\"email\" value={email} onChange={handleChange} />\n      <input\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n      />\n\n      <button type=\"subbmit\">Register</button>\n    </form>\n  );\n};\n","import { RegistrationForm } from 'components/RegistrationForm';\n\nexport const RegistrationPage = () => {\n  return (\n    <main>\n      <RegistrationForm />\n    </main>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["LoginForm","dispatch","useDispatch","useState","email","setEmail","password","setPassword","nandleChange","target","name","value","onSubmit","e","preventDefault","authOperations","type","onChange","Label","styled","useSelector","state","filter","filterValue","Item","Name","Phone","Button","Overlay","ModalWindow","Modal","onClose","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","onClick","currentTarget","document","getElementById","Form","Area","AreaName","AreaNumber","SubmitBtn","notifyERROR","text","toast","notifySUCCESS","contactId","closeForm","number","contacts","contactsApi","data","inputName","setInputName","inputNumber","setInputNumber","useCreateContactMutation","createContact","useEditContactMutation","editContact","contactExists","find","toLowerCase","nameExists","values","id","unwrap","then","catch","r","status","smartEdit","smartCreate","ContactForm","useFormOperations","handleSubmit","pattern","title","required","contact","isModalOpen","setIsModalOpen","useDeleteContactMutation","deleteContact","isDeleting","isLoading","href","disabled","StyledList","ContactList","normalizedFilter","includes","getVisibleContacts","map","c","headingStyle","css","H1","H2","Section","PhoneBookPage","useGetAllContactsQuery","isSuccess","RegistrationForm","setName","handleChange","RegistrationPage"],"sourceRoot":""}