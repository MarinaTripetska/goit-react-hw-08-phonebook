{"version":3,"file":"static/js/911.3321f0bb.chunk.js","mappings":"+TAEaA,EAAcC,EAAAA,KAAaC,MAAM,CAC5CC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,kBAEpDC,SAAUJ,EAAAA,KACPK,IAAI,EAAG,6CACPF,SAAS,oB,2BCWRG,EAAgB,CACpBJ,MAAO,GACPE,SAAU,IAGCG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAQIC,EAAAA,EAAAA,IAAU,CACZJ,cAAAA,EACAK,iBAAkBZ,EAClBa,SAAU,SAAAC,GACRL,EAASM,EAAAA,GAAAA,MAAqBD,OAXhCA,EADF,EACEA,OACAE,EAFF,EAEEA,aACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,WACAC,EALF,EAKEA,QACAC,EANF,EAMEA,OACAC,EAPF,EAOEA,QASF,OACE,iCACE,SAACC,EAAA,GAAD,KAEA,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,qBAIA,UAACZ,EAAA,EAAD,CAAKW,UAAU,OAAOV,GAAI,CAAEY,GAAI,GAAKvB,SAAUG,EAA/C,WACE,UAACqB,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACE,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,SAACC,EAAA,EAAD,CACER,QAAQ,WACRS,MAAM,QACNC,KAAK,OACLC,KAAK,QACLC,MAAOjC,EAAOX,MACd6C,SAAU/B,EACVgC,OAAQ/B,EACRgC,MAAO7B,EAAQlB,OAASgD,QAAQ/B,EAAOjB,OACvCiD,WAAY/B,EAAQlB,OAASiB,EAAOjB,WAIxC,SAACkC,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,SAACC,EAAA,EAAD,CACEE,KAAK,WACLC,KAAK,WACLX,QAAQ,WACRS,MAAM,WACNG,MAAOjC,EAAOT,SACd2C,SAAU/B,EACVgC,OAAQ/B,EACRgC,MAAO7B,EAAQhB,UAAY8C,QAAQ/B,EAAOf,UAC1C+C,WAAY/B,EAAQhB,UAAYe,EAAOf,iBAI7C,SAACgD,EAAA,EAAD,CACElB,QAAQ,YACRmB,WAAS,EACT9B,GAAI,CAAEY,GAAI,EAAGmB,GAAI,GACjBC,WAAW,SAACC,EAAA,EAAD,IACXZ,KAAK,UACLa,UAAWvC,EANb,qBAWA,SAACkB,EAAA,GAAD,CAAMC,WAAS,EAACqB,eAAe,WAA/B,UACE,SAACtB,EAAA,GAAD,CAAMG,MAAI,EAAV,UACE,SAAC,IAAD,CAASL,QAAQ,QAAQD,UAAW0B,EAAAA,GAAMC,GAAG,YAA7C,8D,UC5Fd,EARkB,WAChB,OACE,SAACC,EAAA,EAAD,CAAW5B,UAAU,OAAO6B,SAAS,KAArC,UACE,SAACvD,EAAD","sources":["components/LoginForm/validationSchema.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const LoginSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required(\"It's required!\"),\n\n  password: Yup.string()\n    .min(7, 'Password shoud be no less than 7 symbols!')\n    .required(\"It's required!\"),\n});\n","import { useDispatch } from 'react-redux';\nimport { authOperations } from '../../redux/app/authorization';\nimport { useFormik } from 'formik';\nimport {\n  Button,\n  TextField,\n  Avatar,\n  CssBaseline,\n  Grid,\n  Box,\n  Typography,\n  Link as MUIlink,\n} from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { LoginSchema } from './validationSchema';\nimport AssignmentIndOutlinedIcon from '@mui/icons-material/AssignmentIndOutlined';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const {\n    values,\n    handleSubmit,\n    handleChange,\n    handleBlur,\n    isValid,\n    errors,\n    touched,\n  } = useFormik({\n    initialValues,\n    validationSchema: LoginSchema,\n    onSubmit: values => {\n      dispatch(authOperations.logIn(values));\n    },\n  });\n\n  return (\n    <>\n      <CssBaseline />\n\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Log in\n        </Typography>\n\n        <Box component=\"form\" sx={{ mt: 3 }} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                label=\"Email\"\n                type=\"text\"\n                name=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.email && Boolean(errors.email)}\n                helperText={touched.email && errors.email}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                type=\"password\"\n                name=\"password\"\n                variant=\"outlined\"\n                label=\"Password\"\n                value={values.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.password && Boolean(errors.password)}\n                helperText={touched.password && errors.password}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            sx={{ mt: 3, mb: 2 }}\n            startIcon={<AssignmentIndOutlinedIcon />}\n            type=\"subbmit\"\n            disabled={!isValid}\n          >\n            LOG IN\n          </Button>\n\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <MUIlink variant=\"body2\" component={Link} to=\"/register\">\n                Don't have an account yet? Sign up\n              </MUIlink>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </>\n  );\n};\n","import { LoginForm } from 'components/LoginForm';\nimport { Container } from '@mui/material';\n\nconst LoginPage = () => {\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <LoginForm />\n    </Container>\n  );\n};\n\nexport default LoginPage;\n"],"names":["LoginSchema","Yup","shape","email","required","password","min","initialValues","LoginForm","dispatch","useDispatch","useFormik","validationSchema","onSubmit","values","authOperations","handleSubmit","handleChange","handleBlur","isValid","errors","touched","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","component","variant","mt","Grid","container","spacing","item","xs","sm","TextField","label","type","name","value","onChange","onBlur","error","Boolean","helperText","Button","fullWidth","mb","startIcon","AssignmentIndOutlined","disabled","justifyContent","Link","to","Container","maxWidth"],"sourceRoot":""}