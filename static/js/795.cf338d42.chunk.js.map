{"version":3,"file":"static/js/795.cf338d42.chunk.js","mappings":"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","sources":["components/BasicStyledComponents/Container.jsx","components/BasicStyledComponents/Title.jsx","components/BasicStyledComponents/Section.jsx","components/Filter/Filter.jsx","components/ContactIItem/ContactsItem.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/useFormOperations.js","components/ContactForm/ContactForm.jsx","components/ContactIItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/PhoneBookPage/PhoneBookPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  margin: 50px auto;\n  border: solid 1px black;\n  max-width: 800px;\n  padding: 30px;\n`;\n","import styled, { css } from 'styled-components'\n\nconst headingStyle = css`\n  text-align: center;\n  margin-bottom: 45px;\n`\n\nexport const H1 = styled.h1`\n  font-size: 24px;\n\n  ${headingStyle}\n`\n\nexport const H2 = styled.h1`\n  font-size: 18px;\n\n  ${headingStyle}\n`\n","import styled from \"styled-components\";\n\nexport const Section = styled.section`\n  background-color: rgb(208, 213, 247);\n  padding: 25px;\n  border-radius: 5px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterValue } from '../../redux/app';\nimport styled from 'styled-components';\n\nconst Label = styled.label`\n  margin-bottom: 50px;\n\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n\n  font-weight: 600;\n  & input {\n    margin-left: 15px;\n  }\n`;\n\nconst Filter = () => {\n  const value = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const changeFilter = e => dispatch(filterValue(e.target.value));\n\n  return (\n    <Label>\n      Find contacts by name\n      <input type=\"text\" onChange={changeFilter} value={value} />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  column-gap: 30px;\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n\n  @media (max-width: 450px) {\n    column-gap: 15px;\n  }\n`;\n\nexport const Name = styled.span`\n  font-weight: 600;\n  font-size: 1em;\n`;\nexport const Phone = styled.a`\n  white-space: nowrap;\n  color: inherit;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  column-gap: 7px;\n`;\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  column-gap: 10px;\n\n  width: 100%;\n  max-width: 100px;\n  height: 35px;\n  padding: 5px;\n  background-color: var(--button-color);\n  color: white;\n  cursor: pointer;\n  user-select: none;\n  border: solid 1px black;\n  border-radius: 3px;\n\n  justify-self: end;\n\n  @media (max-width: 450px) {\n    width: 40px;\n    font-size: 22px;\n    & span {\n      display: none;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  z-index: 3;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  padding: 50px;\n  background-color: rgba(0, 0, 0, 0.466);\n`;\nexport const ModalWindow = styled.div`\n  position: absolute;\n  width: 100%;\n  max-width: 70vw;\n  max-height: 50vh;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 25px;\n  background-color: #fff;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: -50px;\n  right: -10px;\n\n  width: 30px;\n  height: 30px;\n  border: none;\n  border-radius: 50%;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalWindow, Button } from './Modal.styled';\nexport const Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleOverlayClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleOverlayClick}>\n      <ModalWindow>\n        {children}\n        <Button type=\"button\" children={'x'} onClick={() => onClose()} />\n      </ModalWindow>\n    </Overlay>,\n    document.getElementById('modal-portal')\n  );\n};\n","import styled from 'styled-components'\n\nexport const Form = styled.form`\n  padding: 5px;\n\n  display: grid;\n  grid-template-areas:\n    'rowName buttonSubmit'\n    'rowNumber buttonSubmit';\n\n  grid-gap: 20px;\n\n  @media (max-width: 480px) {\n    grid-gap: 10px;\n    grid-template-areas:\n      'rowName '\n      'rowNumber'\n      'buttonSubmit';\n  }\n`\nconst Area = styled.label`\n  display: inline-flex;\n  justify-content: space-between;\n  column-gap: 20px;\n\n  font-weight: 700;\n  font-size: 1.5em;\n\n  & input {\n    width: 100%;\n    max-width: 300px;\n    min-width: 175px;\n  }\n`\n\nexport const AreaName = styled(Area)`\n  grid-area: rowName;\n`\nexport const AreaNumber = styled(Area)`\n  grid-area: rowNumber;\n`\n\nexport const SubmitBtn = styled.button`\n  grid-area: buttonSubmit;\n  margin-left: auto;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  column-gap: 20px;\n\n  padding: 5px 15px;\n  width: 100%;\n  max-width: 200px;\n\n  font-size: 20px;\n  color: white;\n  background-color: var(--button-color);\n\n  user-select: none;\n  border: solid 1px black;\n  border-radius: 3px;\n  cursor: pointer;\n\n  & svg {\n    width: 30px;\n    height: 30px;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 16px;\n    column-gap: 10px;\n  }\n\n  @media (max-width: 550px) {\n    & span {\n      display: none;\n    }\n  }\n\n  @media (max-width: 480px) {\n    font-size: 16px;\n    width: 60px;\n    height: 60px;\n  }\n`\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  contactsApi,\n  useCreateContactMutation,\n  useEditContactMutation,\n} from '../../redux/app';\nimport { Toast } from '../Toast';\n\nconst useFormOperations = ({ contactId, closeForm, name, number }) => {\n  const { data: contacts } = useSelector(\n    contactsApi.endpoints.getAllContacts.select()\n  );\n\n  const [inputName, setInputName] = useState(name);\n  const [inputNumber, setInputNumber] = useState(number);\n\n  const [createContact] = useCreateContactMutation();\n  const [editContact] = useEditContactMutation();\n\n  const smartEdit = values => {\n    editContact({ id: contactId, ...values })\n      .unwrap()\n      .then(() => Toast.notifySUCCESS(`${inputName} updated`))\n      .catch(r =>\n        Toast.notifyERROR(`Something went wrong. Eroor: ${r.status}`)\n      );\n\n    closeForm();\n  };\n\n  const smartCreate = values => {\n    createContact(values)\n      .unwrap()\n      .then(() => Toast.notifySUCCESS(`New contact for ${inputName} added`))\n      .catch(r =>\n        Toast.notifyERROR(`Something went wrong. Eroor: ${r.status}`)\n      );\n\n    setInputName('');\n    setInputNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contactExists = contacts?.find(\n      ({ name, number }) =>\n        number === inputNumber && name.toLowerCase() === inputName.toLowerCase()\n    );\n    const nameExists = contacts?.find(\n      ({ name }) => name.toLowerCase() === inputName.toLowerCase()\n    );\n    const values = { name: inputName, number: inputNumber };\n\n    if (contactId) {\n      contactExists\n        ? Toast.notifyERROR(`Contact is already exist!`)\n        : smartEdit(values);\n    } else if (!contactId) {\n      nameExists\n        ? Toast.notifyERROR(`${inputName} already exist!`)\n        : smartCreate(values);\n    }\n  };\n\n  return [inputName, setInputName, inputNumber, setInputNumber, handleSubmit];\n};\n\nexport default useFormOperations;\n","import { MdAddIcCall } from 'react-icons/md';\nimport { AreaName, AreaNumber, Form, SubmitBtn } from './ContactForm.styled';\nimport useFormOperations from './useFormOperations';\n\nexport default function ContactForm({\n  contactId,\n  closeForm,\n  name = '',\n  number = '',\n}) {\n  const [inputName, setInputName, inputNumber, setInputNumber, handleSubmit] =\n    useFormOperations({\n      contactId,\n      closeForm,\n      name,\n      number,\n    });\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <AreaName>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"The name can only contain letters, an apostrophe, a dash, and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc.\"\n          onChange={e => setInputName(e.target.value)}\n          value={inputName}\n          required\n        />\n      </AreaName>\n\n      <AreaNumber>\n        Phone\n        <input\n          type=\"tel\"\n          name=\"number\"\n          onChange={e => setInputNumber(e.target.value)}\n          value={inputNumber}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"The phone number must be numeric and may contain spaces, dashes, parentheses, and may begin with +\"\n          required\n        />\n      </AreaNumber>\n\n      <br />\n\n      <SubmitBtn type=\"submit\">\n        {contactId ? (\n          <span>Save changes</span>\n        ) : (\n          <span>\n            <MdAddIcCall /> Add contact\n          </span>\n        )}\n      </SubmitBtn>\n    </Form>\n  );\n}\n","import { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { MdPhoneEnabled } from 'react-icons/md';\nimport { AiFillDelete, AiFillEdit } from 'react-icons/ai';\nimport { Item, Name, Phone, Button } from './ContactsItem.styled';\nimport { useDeleteContactMutation } from '../../redux/app';\nimport { Modal } from '../Modal';\nimport ContactForm from '../ContactForm';\nimport toast from 'react-hot-toast';\n\nconst notifySUCCESS = text => toast.success(text);\nconst notifyERROR = text => toast.error(text);\n\nconst ContactItem = ({ contact }) => {\n  const { id, name, number } = contact;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <Item id={id}>\n      <Name>{name}:</Name>\n      <Phone href={'tel: ' + number}>\n        <MdPhoneEnabled /> {number}\n      </Phone>\n\n      <Button\n        type=\"button\"\n        onClick={() =>\n          deleteContact(id)\n            .then(() => notifySUCCESS(`${name} successfuly deleted!`))\n            .catch(() => notifyERROR('Something went wrong'))\n        }\n        disabled={isDeleting}\n      >\n        <AiFillDelete /> <span>{isDeleting ? '...Deleting' : 'Delete'}</span>\n      </Button>\n\n      <Button type=\"button\" onClick={() => setIsModalOpen(!isModalOpen)}>\n        <AiFillEdit /> <span>Edit</span>\n      </Button>\n\n      {isModalOpen && (\n        <Modal onClose={setIsModalOpen}>\n          <ContactForm\n            closeForm={setIsModalOpen}\n            contactId={id}\n            name={name}\n            number={number}\n          />\n        </Modal>\n      )}\n    </Item>\n  );\n};\n\n// ContactItem.propTypes = {\n//   id: PropTypes.string.isRequired,\n//   name: PropTypes.string.isRequired,\n//   number: PropTypes.string.isRequired,\n// };\n\nexport default ContactItem;\n","import ContactItem from '../ContactIItem';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { useGetAllContactsQuery } from '../../redux/app';\nimport { useMemo } from 'react';\nconst StyledList = styled.ul`\n  width: 100%;\n  max-width: 440px;\n  margin: 0 auto;\n`;\n\nexport const ContactList = () => {\n  const {\n    data: contacts,\n    isLoading,\n    isSuccess,\n    isError,\n    error,\n  } = useGetAllContactsQuery();\n\n  const filter = useSelector(state => state.filter);\n\n  const getVisibleContacts = useMemo(() => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }, [contacts, filter]);\n\n  if (isLoading) {\n    return <p>...Loading contacts</p>;\n  }\n\n  if (isSuccess && contacts) {\n    return (\n      <StyledList>\n        {getVisibleContacts.map(c => (\n          <ContactItem key={c.id} contact={c} />\n        ))}\n      </StyledList>\n    );\n  }\n\n  if (isError) {\n    return <p>{error.message}</p>;\n  }\n};\n","import Filter from '../../components/Filter';\nimport { ContactList } from '../../components/ContactList';\nimport ContactForm from '../../components/ContactForm';\nimport {\n  Section,\n  H1,\n  H2,\n  Container,\n} from '../../components/BasicStyledComponents';\nimport { useGetAllContactsQuery } from '../../redux/app';\n\nexport const PhoneBookPage = () => {\n  const { isLoading, isSuccess } = useGetAllContactsQuery();\n\n  return (\n    <main>\n      <Container>\n        <H1>Phone book</H1>\n\n        <ContactForm />\n\n        {isLoading && <p>...Loading</p>}\n\n        {isSuccess && (\n          <Section>\n            <H2>Сontacts</H2>\n            <Filter />\n            <ContactList />\n          </Section>\n        )}\n      </Container>\n    </main>\n  );\n};\n\nexport default PhoneBookPage;\n"],"names":["Container","styled","headingStyle","css","H1","H2","Section","Label","value","useSelector","state","filter","dispatch","useDispatch","type","onChange","e","filterValue","target","Item","Name","Phone","Button","Overlay","ModalWindow","Modal","onClose","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","onClick","currentTarget","document","getElementById","Form","Area","AreaName","AreaNumber","SubmitBtn","contactId","closeForm","name","number","contacts","contactsApi","data","useState","inputName","setInputName","inputNumber","setInputNumber","useCreateContactMutation","createContact","useEditContactMutation","editContact","preventDefault","contactExists","find","toLowerCase","nameExists","values","Toast","id","unwrap","then","catch","r","status","smartEdit","smartCreate","ContactForm","useFormOperations","handleSubmit","onSubmit","pattern","title","required","contact","isModalOpen","setIsModalOpen","useDeleteContactMutation","deleteContact","isDeleting","isLoading","href","text","toast","disabled","StyledList","ContactList","useGetAllContactsQuery","isSuccess","isError","error","getVisibleContacts","useMemo","normalizedFilter","includes","map","c","message","PhoneBookPage"],"sourceRoot":""}